(function(){var Ra=Math.imul||function(b,a){var c=b>>16&65535,d=a>>16&65535,e=b&65535,g=a&65535;return e*g+(c*g+e*d<<16)|0};function Xa(){var b=0,a=!1,c=null,d={},e=new Sa,g=e.e.domElement,i=null,h=function(){d={},a=!1},j=function(k){d[k.which]=1,k.which===84?Ba(e.g.a):k.which===71?ya(e.i):k.which===70?Ca(e.g.a):k.which===79&&Da(e.g.a)},m=function(o){d[o.which]=0},p=function(q){q.ctrlKey||P(e,q.deltaX*-.007853981633974483,q.deltaY*-.007853981633974483),q.preventDefault()},s=function(l){a=!0,l.preventDefault()},f=function(){a=!1},w=function(r){if(a){var u=c?r.pageX-c.pageX:0,n=c?r.pageY-c.pageY:0;P(e,u*.007853981633974483,n*.007853981633974483)}c=r},t=function(){var v=window.devicePixelRatio;aa(e,Math.round(window.innerWidth*v)|0,Math.round(window.innerHeight*v)|0)},A=0;i=function(){if(++A,!(A%2)){var C=window.performance.now(),M=Math.min(.25,(C-b)/1000);b=C;var O=y(d,68,0)-y(d,65,0)|0,N=y(d,83,0)-y(d,87,0)|0;ba(e,O,N,M,y(d,32,0)!=0,y(d,16,0)!=0),ca(e,M),document.title=da(e)}window.requestAnimationFrame(i)},t(),
i();var K=document.createElement('div'),B=K.style;B.position='absolute',B.left=B.top='20px',B.padding='13px 15px',B.background='rgba(0, 0, 0, 0.5)',B.color='white',B.pointerEvents='none',B.whiteSpace='pre',B.font='14px/20px sans-serif',B.borderRadius='5px',K.textContent='W/A/S/D: Move\nShift: Move fast\nDrag: Rotate\nT: Toggle textures\nG: Toggle godrays\nF: Toggle fog\nO: Toggle occlusion',document.body.appendChild(g),document.body.appendChild(K),document.onkeydown=j,document.onkeyup=m,window.onblur=h,window.onresize=t,window.onmousedown=s,window.onmouseup=f,window.onmousemove=w,window.onwheel=p}function aa(c,b,a){c.d.setViewOffset(b,a,0,0,b,a),c.d.updateProjectionMatrix(),c.e.setSize(b,a,!1),c.i.h.setSize(b,a)}function ba(h,b,a,c,d,e){h.a.set(0,0,0),e?((b!=0||a!=0)&&(h.a.set(b,0,a).normalize().multiplyScalar(c*20),h.a.applyEuler(h.d.rotation)),h.k=0):((b!=0||a!=0)&&(h.a.set(b,0,a).normalize().multiplyScalar(c*4),h.a.applyAxisAngle(h.b,h.d.rotation.y)),h.k-=c*9.8,h.a.y=h.k*c),Ka(h.g.a,h.h,h.a);var g=Ja(h.g.a,
h.h),i=Ia(h.g.a,h.h);d&&i?h.k=6:(g||i)&&(h.k=0)}function P(d,b,a){var c=d.d.rotation;c.x=Math.min(1.5707963267948966,Math.max(-1.5707963267948966,c.x-a)),c.y-=b,c.y-=Math.floor(c.y/6.283185307179586)*6.283185307179586}function ca(c,b){c.j=c.j*.9+.1/b,c.d.position.copy(c.h.b),c.d.position.y+=.4,c.d.updateMatrixWorld(),c.d.matrixWorldInverse.getInverse(c.d.matrixWorld),Ga(c.g.a,b,c.d,c.e);var a=c.i.h;c.e.setViewport(0,0,a.width,a.height),c.e.render(c.c,c.d,a),za(c.i,c.e,c.d)}function da(b){return Math.round(b.j)+' fps/'+Math.round(b.g.a.s)+' units/'+Fa(b.g.a)+' quads'}function ea(b){return b.b.subarray(0,b.a)}function fa(a,b){(a.a+1|0)>a.c&&R(a),a.b[a.a]=b,++a.a}function Q(d,b,a,c){(d.a+3|0)>d.c&&R(d),d.b[d.a]=b,d.b[d.a+1|0]=a,d.b[d.a+2|0]=c,d.a+=3}function R(a){a.c*=2;var b=new Int32Array(a.c);a.b&&b.set(a.b),a.b=b}function E(b){return b.b.subarray(0,b.a)}function ga(c,b,a){(c.a+2|0)>c.c&&L(c),c.b[c.a]=b,c.b[c.a+1|0]=a,c.a+=2}function F(d,b,a,c){(d.a+3|0)>d.c&&L(d),d.b[d.a]=b,d.b[d.a+1|0]=a,d.b[d.a+2|0]=c,d.a+=3}
function ha(e,b,a,c,d){(e.a+4|0)>e.c&&L(e),e.b[e.a]=b,e.b[e.a+1|0]=a,e.b[e.a+2|0]=c,e.b[e.a+3|0]=d,e.a+=4}function L(a){a.c*=2;var b=new Float32Array(a.c);a.b&&b.set(a.b),a.b=b}function la(e){S(e);for(var b=0;b<6;++b){var a=e.k[b];if(a){var c=(b+3|0)%6;a.k[c].C=!0,a.k[c]=null}}if(e.l.a){for(var d=0,g=e.l.a;d<g;++d)V(e.b.q,e.l.b[d]);e.l.a=0}e.r=null,e.u={}}function S(b){b.t&&(b.a.remove(b.t),b.t=null),b.v&&(b.c.remove(b.v),b.v=null),b.A&&(b.d.remove(b.A),b.A=null),b.n&&(b.n.dispose(),b.n=null)}function ma(b){return b.g>>5&1023|b.i<<5&1047552|b.h<<15&1072693248}function na(d,b,a,c){return b-=d.g,a-=d.i,c-=d.h,b>-1&&b<32&&a>-1&&a<32&&c>-1&&c<32}function oa(c,b,a){c.k[a]=b,b.k[(a+3|0)%6]=c,c.C=b.C=!0}function pa(d,b,a,c){return na(d,b,a,c)?d.j[(b-d.g|0)+((a-d.i|0)+(c-d.h<<5)<<5)|0]:0}function qa(a){if(a.C){S(a),a.l.a=0,a.r={},ra(a);for(var c=0,d=_(a.u),e=d.length;c<e;++c){var b=d[c];V(a.b.q,b)}a.u=a.r,a.r=null,a.n=new THREE.BufferGeometry,a.n.setIndex(THREE.Uint16Attribute(ea(a.s),1)),a.n.addAttribute('position',THREE.Float32Attribute(E(a.m),
3)),a.n.addAttribute('uvs',THREE.Float32Attribute(E(a.o),4)),a.n.addAttribute('updateUV',THREE.Float32Attribute(E(a.p),2)),a.n.addAttribute('updatePosition',THREE.Float32Attribute(E(a.q),3)),a.t=new THREE.Mesh(a.n,a.e),a.v=new THREE.Mesh(a.n,a.b.q.g),a.A=new THREE.Mesh(a.n,a.b.q.i),a.a.add(a.t),a.c.add(a.v),a.d.add(a.A),a.A.frustumCulled=!1,a.m.a=a.o.a=0,a.p.a=a.q.a=0,a.s.a=0,a.C=!1}}function ra(n){for(var b=Qa,a=0,c=n.g,d=n.i,e=n.h,g=0,A=33;g<A;++g)for(var i=0,v=33;i<v;++i)for(var h=0,t=33;h<t;++h){if(i<32&&g<32){var j=0,k=0;if(h>0)j=n.j[(h-1|0)+(i+(g<<5)<<5)|0];else{var m=n.k[0];m&&(j=m.j[31+(i+(g<<5)<<5)|0])}if(h<32)k=n.j[h+(i+(g<<5)<<5)|0];else{var o=n.k[3];o&&(k=o.j[i+(g<<5)<<5])}!j&&k?D(n,c+h|0,(d+i|0)+1|0,(e+g|0)+1|0,0,0,-1,0,-1,0,b[Ra(k,3)+2|0],a):j&&!k&&D(n,c+h|0,(d+i|0)+1|0,e+g|0,0,0,1,0,-1,0,b[Ra(j,3)+2|0],a+1|0)}if(h<32&&g<32){var p=0,q=0;if(i>0)p=n.j[h+((i-1|0)+(g<<5)<<5)|0];else{var s=n.k[1];s&&(p=s.j[h+(31+(g<<5)<<5)|0])}if(i<32)q=n.j[h+(i+(g<<5)<<5)|0];else{var l=n.k[4];l&&(q=l.j[h+(g<<10)|0])}
!p&&q?D(n,c+h|0,d+i|0,e+g|0,1,0,0,0,0,1,b[Ra(q,3)+1|0],a+2|0):p&&!q&&D(n,(c+h|0)+1|0,d+i|0,e+g|0,-1,0,0,0,0,1,b[Ra(p,3)],a+3|0)}if(h<32&&i<32){var f=0,w=0;if(g>0)f=n.j[h+(i+(g-1<<5)<<5)|0];else{var r=n.k[2];r&&(f=r.j[h+(i+992<<5)|0])}if(g<32)w=n.j[h+(i+(g<<5)<<5)|0];else{var u=n.k[5];u&&(w=u.j[h+(i<<5)|0])}!f&&w?D(n,c+h|0,(d+i|0)+1|0,e+g|0,1,0,0,0,-1,0,b[Ra(w,3)+2|0],a+4|0):f&&!w&&D(n,(c+h|0)+1|0,(d+i|0)+1|0,e+g|0,-1,0,0,0,-1,0,b[Ra(f,3)+2|0],a+5|0)}a+=6}}function D(v,b,a,c,d,e,g,i,h,j,k,m){var o=b+d*.5+i*.5,p=a+e*.5+h*.5,q=c+g*.5+j*.5,s=(1+k%16|0)/16-.0001,l=1-(k/16|0)/16-.0001,f=s-.0625+.0002,w=l-.0625+.0002,r=v.m.a/3|0;Q(v.s,r,r+1|0,r+2|0),Q(v.s,r,r+2|0,r+3|0);var u=y(v.u,m,-1);~u?delete v.u[m]:u=ua(v.b.q);var n=v.w,t=v.f;va(v.b.q,u,n),W(v.b.q,u,t),fa(v.l,u),v.r[m]=u,G(v,b,a,c,s,l,n.min.x,n.min.y,t.min.x,t.min.y,o,p,q),G(v,b+d|0,a+e|0,c+g|0,f,l,n.max.x,n.min.y,t.max.x,t.min.y,o,p,q),G(v,(b+d|0)+i|0,(a+e|0)+h|0,(c+g|0)+j|0,f,w,n.max.x,n.max.y,t.max.x,t.max.y,o,p,q),G(v,b+i|0,a+h|0,c+j|0,s,w,n.min.x,n.max.y,t.min.x,
t.max.y,o,p,q)}function sa(b){return b.l?b.l.a:0}function G(p,b,a,c,d,e,g,i,h,j,k,m,o){F(p.m,b,a,c),ha(p.o,d,e,g,i),ga(p.p,h,j),F(p.q,k+(b-k)*2,m+(a-m)*2,o+(c-o)*2)}function ta(l){for(var b=l.h,r=l.h+32|0;b<r;++b)for(var a=l.g,w=l.g+32|0;a<w;++a)for(var c=Math.round(35.2+Na(a*.02,b*.02)*16)|0,d=(a-l.g|0)+(b-l.h<<10)|0,e=Math.max(0,l.i),f=Math.min(c,l.i+32|0);e<f;++e){var g=(e+1|0)^c?e<(c-3|0)?3:1:2;l.j[d+(e-l.i<<5)|0]=g}for(var i=0;i<6;++i){var h=63-Ra(i,10)|0;if(h>=l.i&&h<(l.i+32|0))for(var j=l.h,n=l.h+32|0;j<n;++j)for(var k=l.g,u=l.g+32|0;k<u;++k){var m=k*.01,o=j*.01;o/=.866025404,m-=o*.5,i&1&&(m-=1/3),m-=Math.floor(m),o-=Math.floor(o);var p=1-m-o;p<0&&(m=1-m,o=1-o,p=-p);var q=Math.max(Math.max(m,o),p),s=Math.min(Math.min(m,o),p);!(q>.6966666666666667)&&(!(q<.6366666666666666)||!(s>.03))&&(l.j[(k-l.g|0)+((h-l.i|0)+(j-l.h<<5)<<5)|0]=5)}}l.C=!0}function ua(a){if(a.t==-1)return-1;var b=a.t;return a.t=a.k[b],W(a,b,a.m),U(a,a.m.min.x,a.m.min.y,a.m.max.x,a.m.min.y,a.m.max.x,a.m.max.y),U(a,a.m.min.x,a.m.min.y,a.m.max.x,
a.m.max.y,a.m.min.x,a.m.max.y),b}function U(i,b,a,c,d,e,g){F(i.w,b*2-1,a*2-1,0),F(i.w,c*2-1,d*2-1,0),F(i.w,e*2-1,g*2-1,0)}function V(a,b){~b&&(a.k[b]=a.t,a.t=b)}function W(e,b,a){var c=b%e.b|0,d=b/e.b|0;a.min.x=c/e.b,a.min.y=d/e.a,a.max.x=(c+1)/e.b,a.max.y=(d+1)/e.a}function va(e,b,a){var c=b%e.b<<1,d=b/e.b<<1;a.min.x=(c+.5)/(e.b<<1),a.min.y=(d+.5)/(e.a<<1),a.max.x=(c+1.5)/(e.b<<1),a.max.y=(d+1.5)/(e.a<<1)}function wa(f,b,a,c){var d=f.n&1,e=d==0,g=d==1;if(e){var i=Math.random()*6.283185307179586,h=Math.asin(Math.random()*2-1);f.l.set(Math.cos(i)*Math.cos(h),Math.sin(h),Math.sin(i)*Math.cos(h)),f.l.y=Math.abs(+f.l.y),f.n%6?f.l.multiplyScalar(.1).add(c).normalize():(f.l.y+=1,f.l.normalize()),f.s.set(f.l.y,f.l.z,f.l.x).cross(f.l).normalize(),f.q.copy(f.s).cross(f.l).normalize(),f.o.min.set(Infinity,Infinity,Infinity),f.o.max.set(-Infinity,-Infinity,-Infinity);for(var w=0,r=a.d,u=r.length;w<u;++w)for(var j=r[w],k=0;k<8;++k){var m=j.g+(k&1?32:0),o=j.i+(k&2?32:0),p=j.h+(k&4?32:0);f.p.set(m,o,p),f.p.set(f.p.dot(f.q),
f.p.dot(f.s),f.p.dot(f.l)),f.o.expandByPoint(f.p)}f.o.expandByScalar(1),f.f.left=f.o.min.x,f.f.right=f.o.max.x,f.f.bottom=f.o.min.y,f.f.top=f.o.max.y,f.f.near=-f.o.max.z,f.f.far=-f.o.min.z,f.f.matrix.makeBasis(f.q,f.s,f.l),f.f.matrix.decompose(f.f.position,f.f.quaternion,f.f.scale),f.f.updateProjectionMatrix(),b.setViewport(0,0,f.j.width,f.j.height),b.render(f.c,f.f,f.j)}if(b.autoClear=!1,b.setViewport(0,0,f.r.width,f.r.height),f.w.a){var q=new THREE.BufferGeometry;q.addAttribute('position',THREE.Float32Attribute(E(f.w),3));var s=new THREE.Mesh(q,f.h);s.frustumCulled=!1,f.e.add(s),b.render(f.e,f.f,f.r),f.e.remove(s),f.w.a=0}if(g){f.i.uniforms.rayLight.value.copy(f.l),f.i.uniforms.previous.value=f.r,b.render(f.d,f.f,f.u);var l=f.r;f.r=f.u,f.u=l}b.autoClear=!0,++f.n}function ya(b){b.j=!b.j}function za(g,b,a){var c=g.a.uniforms,d=g.b.c.position;g.c.set(d.x,d.y,d.z,0),g.c.applyMatrix4(g.e.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse)),c.uvLight.value.set(g.c.x/g.c.w*.5+.5,g.c.y/g.c.w*.5+.5),c.rayLight.value.copy(d),
c.cameraToWorldMatrix.value.multiplyMatrices(a.matrixWorld,g.e.getInverse(a.projectionMatrix)),g.d.set(0,0,1),g.d.applyMatrix4(c.cameraToWorldMatrix.value),g.d.normalize();var e=d.x*g.d.x+d.y*g.d.y+d.z*g.d.z;c.godrayStrength.value=g.j?Math.max(0,Math.pow(Math.max(0,e),4)/2-.1):0,c.randomSeed.value=Math.random(),b.render(g.g,g.i)}function Ba(a){var b=a.c.uniforms.renderTextureMap;b.value=!b.value}function Ca(a){var b=a.c.uniforms.renderFog;b.value=!b.value}function Da(a){var b=a.c.uniforms.renderOcclusion;b.value=!b.value}function Ea(x,b){x.j.setFromMatrix(x.m.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse));for(var a=x.s+Math.sqrt(3072)/2,c=b.position,d=Math.floor((c.x-a)/32)|0,e=Math.ceil((c.x+a)/32)|0,g=Math.max(0,Math.floor((c.y-a)/32)|0),i=Math.min(2,Math.ceil((c.y+a)/32)|0),h=Math.floor((c.z-a)/32)|0,j=Math.ceil((c.z+a)/32)|0,k=0;k<x.d.length;){var m=x.d[k];X(c.x,c.y,c.z,m.g+16,m.i+16,m.h+16)>a?(delete x.e[ma(m)],x.d.splice(k,1),la(m)):++k}for(var o=null,p=-Infinity,q=d;q<e;++q)for(var s=q<<5,l=g;l<i;++l)for(var f=l<<5,w=h;w<j;++w){
var r=w<<5,u=X(c.x,c.y,c.z,s+16,f+16,r+16);if(!(u>a)){var n=s>>5&1023|f<<5&1047552|r<<15&1072693248,t=y(x.e,n,null);if(!t){t=new Va(x,x.g,x.i,x.h,x.c,s,f,r),ta(t),x.e[n]=t,x.d.push(t);for(var v=0;v<6;++v){var A=v,C=s+(ia(A)<<5)|0,M=f+(ja(A)<<5)|0,O=r+(ka(A)<<5)|0,N=y(x.e,C>>5&1023|M<<5&1047552|O<<15&1072693248,null);N&&oa(t,N,A)}x.k.min.set(s,f,r),x.k.max.set(s+32|0,f+32|0,r+32|0)}if(t.C){var K=x.j.intersectsBox(x.k),B=K?x.s-u:-u;B>p&&(o=t,p=B)}}}o&&qa(o)}function Fa(c){for(var b=0,d=0,e=c.d,g=e.length;d<g;++d){var a=e[d];b+=sa(a)}return b}function Ga(e,b,a,c){e.l=e.l*.95+.05/b,e.s=Math.max(64,Math.min(128,e.s+(e.l-25)*b)),Ea(e,a);var d=e.c.uniforms;d.drawDistance.value=e.s,d.randomSeed.value=Math.random(),d.rayLight.value.copy(e.b.c.position),d.renderOcclusion.value&&wa(e.q,c,e,e.b.c.position)}function Ha(g,b,a,c){var d=(b&-32)>>5&1023|(a&-32)<<5&1047552|(c&-32)<<15&1072693248,e=y(g.e,d,null);return e?pa(e,b,a,c):0}function Ia(d,b){var a=d.o.copy(b.b).sub(b.a).floor(),c=d.p.copy(b.b).add(b.a).ceil();return b.b.y-b.a.y-a.y<.01&&!H(d,
a.x,c.x+1,a.y-1,a.y-1,a.z,c.z+1)}function Ja(d,b){var a=d.o.copy(b.b).sub(b.a).floor(),c=d.p.copy(b.b).add(b.a).ceil();return c.y-b.b.y-b.a.y<.01&&!H(d,a.x,c.x+1,c.y,c.y,a.z,c.z+1)}function H(k,b,a,c,d,e,g){for(var i=b,p=a+1|0;i<p;++i)for(var h=c,o=d+1|0;h<o;++h)for(var j=e,m=g+1|0;j<m;++j)if(Ha(k,i,h,j))return!1;return!0}function Ka(c,b,a){a.y>0&&I(c,b,1,a.y),I(c,b,0,a.x),I(c,b,2,a.z),a.y<0&&I(c,b,1,a.y)}function I(o,b,a,c){if(c!=0){var d=o.o.copy(b.b).sub(b.a).floor(),e=o.p.copy(b.b).add(b.a).ceil(),g=b.b.getComponent(a),i=b.a.getComponent(a);if(c<0){for(var h=Math.floor(g-i+c)|0,j=Math.floor(g-i-1)|0;j>=h;--j)if(!H(o,a?d.x:j,a?e.x-1:j,a^1?d.y:j,a^1?e.y-1:j,a^2?d.z:j,a^2?e.z-1:j)){b.b.setComponent(a,(j+1|0)+i+.0001);return}}else if(c>0)for(var k=Math.ceil(g+i+c-1)|0,m=Math.ceil(g+i)|0;m<=k;++m)if(!H(o,a?d.x:m,a?e.x-1:m,a^1?d.y:m,a^1?e.y-1:m,a^2?d.z:m,a^2?e.z-1:m)){b.b.setComponent(a,m-i-.0001);return}b.b.setComponent(a,g+c)}}function X(b,a,c,d,e,g){return b-=d,a-=e,c-=g,Math.sqrt(b*b+a*a+c*c)}function La(b,a){
var c=b+Ra(a,57)|0;return c=c<<13^c,1-(Ra(c,Ra(Ra(c,c),15731)+789221|0)+1376312589&2147483647)*(1/1073741824)}function Y(b){return b*b*(3-b*2)}function Ma(b,a){for(var c=Math.floor(b)|0,d=Math.floor(a)|0,e=Y(b-c),g=Y(a-d),i=0,h=0;h<4;++h){var j=h&1,k=h>>1&1;i+=La(c+j|0,d+k|0)*(j?e:1-e)*(k?g:1-g)}return i}function Na(b,a){for(var c=0,d=1,e=0;e<3;++e)c+=Ma(b,a)*d,d*=.5,b*=2,a*=2;return c}function y(d,b,a){var c=d[b];return c!==void 0?c:a}function _(c){var b=[];for(var a in c)b.push(c[a]);return b}function ia(b){return b?b^3?0:1:-1}function ja(b){return b^1?b^4?0:1:-1}function ka(b){return b^2?b^5?0:1:-1}function Sa(){this.b=new THREE.Vector3(0,1,0),this.a=new THREE.Vector3,this.c=new THREE.Scene,this.d=new THREE.PerspectiveCamera(75,1,.1,1000),this.e=new THREE.WebGLRenderer,this.g=this.i=null,this.h=new _a,this.j=this.k=0,this.g=new $a(this.c),this.i=new Ya(this.g),this.h.b.y=50,this.h.a.set(.4,.8,.4),this.d.rotation.order='YXZ',this.e.setClearColor(0,0),this.e.gammaInput=this.e.gammaOutput=!0}function Ta(){this.b=new Int32Array(256),
this.a=0,this.c=256}function Ua(){this.b=new Float32Array(256),this.a=0,this.c=256}function Va(b,a,c,d,e,g,i,h){this.b=b,this.a=a,this.c=c,this.d=d,this.e=e,this.g=g,this.i=i,this.h=h,this.j=new Uint8Array(32768),this.k=[null,null,null,null,null,null],this.m=new Ua,this.o=new Ua,this.p=new Ua,this.q=new Ua,this.s=new Ta,this.l=new Ta,this.f=new THREE.Box2,this.w=new THREE.Box2,this.r=null,this.u={},this.n=this.t=null,this.v=this.A=null,this.C=!1}function Wa(b,a){this.b=this.a=0,this.c=new THREE.Scene,this.d=new THREE.Scene,this.e=new THREE.Scene,this.g=this.i=null,this.h=this.j=null,this.k=null,this.m=new THREE.Box2,this.o=new THREE.Box3,this.p=new THREE.Vector3,this.q=new THREE.Vector3,this.s=new THREE.Vector3,this.l=new THREE.Vector3,this.f=new THREE.OrthographicCamera(0,1,0,1,0,1),this.w=new Ua,this.r=this.u=null,this.n=this.t=0,this.b=b,this.a=a,this.r=new THREE.WebGLRenderTarget(b<<1,a<<1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.r.texture.generateMipmaps=!1,
this.u=new THREE.WebGLRenderTarget(b<<1,a<<1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.u.texture.generateMipmaps=!1,this.j=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.j.texture.generateMipmaps=!1;var c=THREE.UniformsUtils.merge([THREE.UniformsLib.common]);this.g=new THREE.ShaderMaterial({uniforms:c,vertexShader:'\n        varying vec4 position_;\n\n        void main() {\n          position_ = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_Position = position_;\n        }\n      ',fragmentShader:'\n        varying vec4 position_;\n\n        void main() {\n          float depth = position_.z / position_.w * 0.5 + 0.5;\n          vec3 v = fract(depth * vec3(1.0, 256.0, 65536.0));\n          v = floor(v * 256.0) / 256.0;\n          gl_FragColor = vec4(v, 1.0);\n        }\n      '}),c=THREE.UniformsUtils.merge([THREE.UniformsLib.common,{map:{type:'t',value:null}},
{previous:{type:'t',value:null}},{rayLight:{type:'v3',value:new THREE.Vector3}}]),c.map.value=this.j,this.i=new THREE.ShaderMaterial({uniforms:c,vertexShader:'\n        attribute vec2 updateUV;\n        attribute vec3 updatePosition;\n        varying vec3 worldPosition;\n        varying vec4 clipPosition;\n        varying vec2 updateUV_;\n\n        void main() {\n          updateUV_ = updateUV;\n          worldPosition = updatePosition;\n          clipPosition = projectionMatrix * modelViewMatrix * vec4(updatePosition, 1.0);\n          gl_Position = vec4(updateUV * 2.0 - 1.0, 0.0, 1.0);\n        }\n      ',fragmentShader:'\n        uniform sampler2D map;\n        uniform sampler2D previous;\n        uniform vec3 rayLight;\n        varying vec3 worldPosition;\n        varying vec4 clipPosition;\n        varying vec2 updateUV_;\n\n        void main() {\n          vec3 position = clipPosition.xyz / clipPosition.w * 0.5 + 0.5;\n          vec3 encoded = texture2D(map, position.xy).rgb;\n          float depth = dot(encoded, vec3(1.0, 1.0 / 256.0, 1.0 / 65536.0));\n          vec3 normal = normalize(cross(dFdx(worldPosition), dFdy(worldPosition)));\n          float visibility = float(depth + 1.0 / 512.0 > position.z) * max(0.0, dot(rayLight, normal));\n\n          float accumulationFactor = 1.0 / 64.0;\n          vec4 previous8 = texture2D(previous, updateUV_);\n          vec2 previous16 = vec2(\n            dot(previous8.rg, vec2(1.0, 1.0 / 256.0)),\n            dot(previous8.ba, vec2(1.0, 1.0 / 256.0)));\n          vec2 next16 = mix(previous16, vec2(1.0 - visibility, 1.0), accumulationFactor);\n          vec4 next8 = fract(vec4(next16.x * vec2(1.0, 256.0), next16.y * vec2(1.0, 256.0)));\n          next8 = floor(next8 * 256.0) / 256.0;\n          gl_FragColor = next8;\n        }\n      ',
derivatives:!0}),c=THREE.UniformsUtils.merge([THREE.UniformsLib.common]),this.h=new THREE.ShaderMaterial({uniforms:c,vertexShader:'\n        void main() {\n          gl_Position = vec4(position, 1.0);\n        }\n      ',fragmentShader:'\n        void main() {\n          // Clear to a gray color with very low weight instead of to zero.\n          // Using zero led to a divide by zero when evaluating the occlusion\n          // which poisoned all values with NaN and led to black flashes on\n          // some cards.\n          gl_FragColor = vec4(0.0, 0.5, 0.0, 1.0);\n        }\n      '});var d=Ra(b,a);this.k=new Int32Array(d);for(var e=0;e<d;++e)this.k[e]=(e+1|0)^d?e+1|0:-1}function Ya(b){this.b=this.a=null,this.c=new THREE.Vector4,this.d=new THREE.Vector3,this.e=new THREE.Matrix4,this.g=new THREE.Scene,this.i=new THREE.OrthographicCamera(0,1,0,1,0,1),this.h=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),this.j=!0,this.b=b;var a=THREE.UniformsUtils.merge([THREE.UniformsLib.common,
{map:{type:'t',value:null}},{cameraToWorldMatrix:{type:'m4',value:new THREE.Matrix4}},{clearColor:{type:'c',value:b.d}},{uvLight:{type:'v3',value:new THREE.Vector3}},{rayLight:{type:'v3',value:new THREE.Vector3}},{randomSeed:{type:'f',value:0}},{godrayStrength:{type:'f',value:0}}]);a.map.value=this.h,this.h.texture.generateMipmaps=!1,this.a=new THREE.ShaderMaterial({uniforms:a,vertexShader:[THREE.ShaderChunk.uv_pars_vertex,'\n        uniform mat4 cameraToWorldMatrix;\n        varying vec3 ray_;\n        varying vec2 uv_;\n\n        void main() {\n          vec4 projected = cameraToWorldMatrix * vec4(position.xy, 1.0, 1.0);\n          uv_ = uv;\n          ray_ = projected.xyz / projected.w;\n          gl_Position = vec4(position, 1.0);\n        }\n        '].join('\n'),fragmentShader:[THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.map_pars_fragment,'\n        uniform sampler2D map;\n        uniform float randomSeed;\n        uniform vec3 clearColor;\n        uniform vec3 rayLight;\n        uniform vec3 uvLight;\n        uniform float godrayStrength;\n        varying vec3 ray_;\n        varying vec2 uv_;\n\n        float lightMagnitude(vec3 ray) {\n          float falloff = max(0.0, dot(rayLight, normalize(ray)));\n          return pow(falloff, 4.0);\n        }\n\n        float godray() {\n          if (godrayStrength == 0.0) {\n            return 0.0;\n          }\n\n          float random = fract(sin(dot(gl_FragCoord.xy + randomSeed, vec2(12.9898, 78.233))) * 43758.5453);\n          vec3 deltaRayX = dFdx(ray_) / dFdx(uv_).x;\n          vec3 deltaRayY = dFdy(ray_) / dFdy(uv_).y;\n          const int count = 8;\n          float alpha = 0.0;\n\n          for (int i = 0; i < count; i++) {\n            float t = (float(i) + random) / float(count);\n            vec2 uv = mix(uv_, uvLight.xy, t);\n            vec3 ray = ray_ +\n              deltaRayX * (uv.x - uv_.x) +\n              deltaRayY * (uv.y - uv_.y);\n            float magnitude = lightMagnitude(ray);\n\n            if (magnitude != 0.0) {\n              float occlusion = 1.0 - texture2D(map, uv).a;\n              float falloff = 1.0 - t;\n              alpha += occlusion * falloff;\n            }\n          }\n\n          // The integral of (1.0 - t) from 0 to 1 is 0.5\n          alpha *= 2.0;\n\n          return alpha * godrayStrength / float(count);\n        }\n\n        void main() {\n          vec4 color = texture2D(map, uv_);\n          vec3 backgroundColor = mix(clearColor, vec3(1.0), lightMagnitude(ray_));\n          color.rgb = mix(backgroundColor, color.rgb, color.a);\n          color.rgb += godray();\n          gl_FragColor = color;\n        }\n        '].join('\n'),
derivatives:!0}),this.g.add(new THREE.Mesh(new THREE.PlaneGeometry(2,2,1,1),this.a))}function Za(b){this.b=this.a=null,this.c=null,this.d=[],this.e={},this.g=new THREE.Group,this.i=new THREE.Group,this.h=new THREE.Group,this.j=new THREE.Frustum,this.k=new THREE.Box3,this.m=new THREE.Matrix4,this.o=new THREE.Vector3,this.p=new THREE.Vector3,this.q=new Wa(1024,1024),this.s=96,this.l=60,this.b=b,this.a=new THREE.TextureLoader().load('terrain.png'),this.a.minFilter=this.a.magFilter=THREE.NearestFilter;var a=THREE.UniformsUtils.merge([THREE.UniformsLib.common,{map:{type:'t',value:null}},{lightmap:{type:'t',value:null}},{rayLight:{type:'v3',value:new THREE.Vector3}},{clearColor:{type:'c',value:b.d}},{drawDistance:{type:'f',value:0}},{randomSeed:{type:'f',value:0}},{renderTextureMap:{type:'i',value:!0}},{renderFog:{type:'i',value:!0}},{renderOcclusion:{type:'i',value:!0}}]);a.map.value=this.a,a.lightmap.value=this.q.r,this.c=new THREE.ShaderMaterial({uniforms:a,vertexShader:'\n        attribute vec4 uvs;\n        varying vec3 worldSpacePosition;\n        varying vec3 cameraSpacePosition;\n        varying vec4 uvs_;\n\n        void main() {\n          worldSpacePosition = position;\n          vec4 transformed = modelViewMatrix * vec4(position, 1.0);\n          cameraSpacePosition = transformed.xyz / transformed.w;\n          uvs_ = uvs;\n          gl_Position = projectionMatrix * transformed;\n        }\n      ',
fragmentShader:[THREE.ShaderChunk.common,'\n        uniform bool renderTextureMap;\n        uniform bool renderFog;\n        uniform bool renderOcclusion;\n        uniform sampler2D map;\n        uniform sampler2D lightmap;\n        uniform float randomSeed;\n        uniform vec3 rayLight;\n        uniform vec3 clearColor;\n        uniform float drawDistance;\n        varying vec3 worldSpacePosition;\n        varying vec3 cameraSpacePosition;\n        varying vec4 uvs_;\n\n        void main() {\n          // Occlusion\n          float occlusion;\n          if (renderOcclusion) {\n            vec4 sample = texture2D(lightmap, uvs_.zw);\n            occlusion = 1.0 -\n              dot(sample.rg, vec2(1.0, 1.0 / 256.0)) /\n              dot(sample.ba, vec2(1.0, 1.0 / 256.0));\n            occlusion = 0.01 + 0.99 * occlusion;\n          } else {\n            vec3 normal = normalize(cross(dFdx(worldSpacePosition), dFdy(worldSpacePosition)));\n            occlusion = 0.1 + 0.9 * max(0.0, dot(rayLight, normal));\n          }\n\n          // Terrain\n          vec3 color = renderTextureMap ? inputToLinear(texture2D(map, uvs_.xy).rgb) * occlusion : vec3(occlusion);\n          if (renderFog) {\n            float fade = max(0.0, 1.0 - length(cameraSpacePosition) / drawDistance);\n            color = mix(inputToLinear(clearColor), color, 1.0 - exp(fade * fade * -5.541263545158676));\n          }\n\n          // Finalize\n          color = linearToOutput(color);\n          float random = fract(sin(dot(gl_FragCoord.xy + randomSeed, vec2(12.9898, 78.233))) * 43758.5453);\n          color += (random - 0.5) / 255.0;\n          gl_FragColor = vec4(color, 1.0);\n        }\n        '].join('\n'),
derivatives:!0}),b.b.add(this.g),this.q.c.add(this.i),this.q.d.add(this.h),this.h.frustumCulled=!1}function _a(){this.b=new THREE.Vector3,this.a=new THREE.Vector3}function $a(b){this.b=this.a=null,this.c=new THREE.DirectionalLight(16777215,1),this.d=new THREE.Color(13426158),this.b=b,this.c.position.set(1,3,2),this.c.position.normalize(),b.add(this.c),this.a=new Za(this)}var Qa=new Uint8Array([0,0,0,2,2,2,0,2,3,1,1,1,66,2,68,6,6,5]);Xa()})();
