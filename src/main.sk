@entry
def main {
  var SHIFT_KEY = 16
  var oldTitle = document.title
  var oldTime = 0.0
  var fps = 0.0
  var pressed = false
  var oldMouse dynamic = null
  var keys IntMap<int> = {}
  var app = App.new
  var element = app.element
  var tick fn()
  var blur = => {
    keys = {}
    pressed = false
  }
  var keydown = (e dynamic) => {
    keys[e.which] = 1
  }
  var keyup = (e dynamic) => {
    keys[e.which] = 0
  }
  var wheel = (e dynamic) => {
    if e.ctrlKey {
      app.moveCamera(0, e.deltaY * 0.1)
    } else {
      app.rotateCamera(e.deltaX * -(Math.PI / 400), e.deltaY * -(Math.PI / 400)) # OS X trackpad
    }
    e.preventDefault()
  }
  var mousedown = (e dynamic) => {
    pressed = true
    e.preventDefault()
  }
  var mouseup = => {
    pressed = false
  }
  var mousemove = (e dynamic) => {
    if pressed {
      var deltaX = oldMouse != null ? e.pageX - oldMouse.pageX : 0
      var deltaY = oldMouse != null ? e.pageY - oldMouse.pageY : 0
      app.rotateCamera(deltaX * (Math.PI / 400), deltaY * (Math.PI / 400))
    }
    oldMouse = e
  }
  var resize = => {
    app.resize(window.innerWidth, window.innerHeight)
  }
  tick = => {
    var newTime double = window.performance.now()
    var seconds = (newTime - oldTime) / 1000
    oldTime = newTime

    var speed = (4 + (20 - 4) * keys.get(SHIFT_KEY, 0)) * seconds
    var deltaX = (keys.get('D', 0) - keys.get('A', 0)) * speed
    var deltaY = (keys.get('S', 0) - keys.get('W', 0)) * speed
    app.moveCamera(deltaX, deltaY)

    app.tick(seconds)
    window.requestAnimationFrame(tick)

    fps = fps * 0.9 + 0.1 / seconds
    document.title = oldTitle + " - FPS: " + Math.round(fps)
  }
  resize()
  tick()

  document.body.appendChild(element)
  document.onkeydown = keydown
  document.onkeyup = keyup
  window.onblur = blur
  window.onresize = resize
  window.onmousedown = mousedown
  window.onmouseup = mouseup
  window.onmousemove = mousemove
  window.onwheel = wheel
}
