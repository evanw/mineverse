class App {
  const world World = null
  const _scene = THREE.Scene.new()
  const _renderer = THREE.WebGLRenderer.new()
  const _screen Screen = null
  var _fps = 0.0

  def new {
    world = World.new(_scene)
    _screen = Screen.new(world)
    world.camera.rotation.order = "YXZ"
    _renderer.setClearColor(0, 0)
    _renderer.gammaInput = true
    _renderer.gammaOutput = true
  }

  def element dynamic {
    return _renderer.domElement
  }

  def toggleRenderFog {
    world.terrain.toggleRenderFog
  }

  def resize(width int, height int) {
    world.camera.setViewOffset(width, height, 0, 0, width, height)
    world.camera.updateProjectionMatrix()
    _renderer.setSize(width, height, false)
    _screen.resize(width, height)
  }

  def rotateCamera(deltaX double, deltaY double) {
    var rotation = world.camera.rotation
    rotation.x = Math.min(Math.PI / 2, Math.max(-Math.PI / 2, rotation.x - deltaY))
    rotation.y -= deltaX
    rotation.y -= Math.floor(rotation.y / (Math.PI * 2)) * (Math.PI * 2)
  }

  def tick(seconds double) {
    _fps = _fps * 0.9 + 0.1 / seconds
    world.camera.position.copy(world.player.aabb.center)
    world.camera.position.y += 0.4
    world.camera.updateMatrixWorld()
    world.camera.matrixWorldInverse.getInverse(world.camera.matrixWorld)
    world.tick(seconds, _renderer)

    var target = _screen.renderTarget
    _renderer.setViewport(0, 0, target.width, target.height)
    _renderer.render(_scene, world.camera, target)
    _screen.render(_renderer, world.camera)
  }

  def title string {
    return Math.round(_fps).toString + " fps"
  }
}
